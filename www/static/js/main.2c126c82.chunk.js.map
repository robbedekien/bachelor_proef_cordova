{"version":3,"sources":["containers/musicDetail/musicDetail.module.css","components/musicCard/musicCard.module.css","components/bottomNav/bottomNav.module.css","containers/musicOverview/musicOverview.module.css","components/button/button.module.css","containers/musicAdd/musicAdd.module.css","components/button/button.component.jsx","components/musicCard/musicCard.component.jsx","store/actionStatus.js","containers/musicOverview/musicOverview.container.jsx","store/actions/music.actions.js","containers/musicDetail/musicDetail.container.jsx","containers/musicAdd/musicAdd.container.jsx","components/bottomNav/bottomNav.component.jsx","App.js","serviceWorker.js","axios-custom.js","store/sagas/music.saga.js","store/sagas/index.saga.js","store/reducers/music.reducer.js","index.js"],"names":["module","exports","Button","props","className","classes","onClick","onclick","text","MusicCard","albumUrl","image","split","CardContainer","ImageContainer","Image","src","alt","Content","Title","title","Artist","artist","Info","genre","year","Share","e","stopPropagation","options","message","subject","window","plugins","socialsharing","shareWithOptions","result","console","log","completed","app","msg","share","actionStatus","NOT_RUNNING","RUNNING","SUCCESS","ERROR","MusicOverview","dispatch","useDispatch","music","useSelector","state","musicStatus","useEffect","type","content","songs","Object","keys","forEach","key","push","map","song","id","Card","history","OverviewContainer","MusicDetail","useParams","DetailContainer","Actions","songId","confirm","actions","shareSong","MusicAdd","useState","setTitle","setArtist","setGenre","setYear","imageUrl","setImageUrl","setImage","Container","Form","onSubmit","formData","FormData","set","append","addSongAction","name","onChange","event","preventDefault","target","files","URL","createObjectURL","Label","htmlFor","placeholder","value","Input","Submit","BottomNav","navigate","url","bottomNav","redirect","navItem","size","icon","faMusic","color","faPlus","withRouter","path","component","Detail","Add","exact","Overview","Boolean","location","hostname","match","instance","axios","create","baseURL","fetchMusicSaga","addSongSaga","deleteSongSaga","action","put","get","response","data","error","post","headers","delete","watchMusic","all","takeEvery","initialState","musicAddStatus","musicDeleteStatus","musicError","songAddError","songDeleteError","updateObject","oldObject","updatedProperties","addMusicStart","addMusicSuccess","addMusicFail","addSongStart","addSongSuccess","addSongFail","musicAddError","deleteSongStart","deleteSongSuccess","deleteSongFail","musicDeleteError","reducer","sagaMiddleware","createSagaMiddleware","store","createStore","musicReducer","compose","applyMiddleware","thunkMiddleware","run","renderReactDom","ReactDOM","render","document","getElementById","cordova","addEventListener","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2c126c82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DetailContainer\":\"musicDetail_DetailContainer__3F7RO\",\"ImageContainer\":\"musicDetail_ImageContainer__1kjTM\",\"Image\":\"musicDetail_Image__3sNMw\",\"Content\":\"musicDetail_Content__1afEN\",\"Title\":\"musicDetail_Title__3wsRh\",\"Artist\":\"musicDetail_Artist__3_4W6\",\"Info\":\"musicDetail_Info__3hMgz\",\"Actions\":\"musicDetail_Actions__2-bCk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardContainer\":\"musicCard_CardContainer__2F4ir\",\"ImageContainer\":\"musicCard_ImageContainer__4Rb-w\",\"Image\":\"musicCard_Image__fgYU5\",\"Content\":\"musicCard_Content__1tAC6\",\"Title\":\"musicCard_Title__3qjwA\",\"Artist\":\"musicCard_Artist__1MqIK\",\"Info\":\"musicCard_Info__3p8Jk\",\"Share\":\"musicCard_Share__GADoj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottomNav\":\"bottomNav_bottomNav__3tuo9\",\"navItem\":\"bottomNav_navItem__1-eAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OverviewContainer\":\"musicOverview_OverviewContainer__1ngIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__l6X__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"musicAdd_Container__3uskf\",\"Form\":\"musicAdd_Form__3fdJN\",\"Label\":\"musicAdd_Label__2zDN6\",\"Input\":\"musicAdd_Input__277go\",\"ImageContainer\":\"musicAdd_ImageContainer__1pqk7\",\"Image\":\"musicAdd_Image__3uuyY\",\"upload-btn-wrapper\":\"musicAdd_upload-btn-wrapper__2CU08\"};","import React from \"react\";\nimport classes from \"./button.module.css\";\n\nconst Button = (props) => {\n  return (\n    <button className={classes.Button} onClick={props.onclick}>\n      {props.text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport Button from \"../button/button.component\";\nimport classes from \"./musicCard.module.css\";\n\nconst MusicCard = (props) => {\n  const share = (title) => {\n    // this is the complete list of currently supported params you can pass to the plugin (all optional)\n    var options = {\n      message: `Check out this song: ${title}!`, // not supported on some apps (Facebook, Instagram)\n      subject: title, // fi. for email\n    };\n\n    var onSuccess = function (result) {\n      console.log(\"Share completed? \" + result.completed); // On Android apps mostly return false even while it's true\n      console.log(\"Shared to app: \" + result.app); // On Android result.app is currently empty. On iOS it's empty when sharing is cancelled (result.completed=false)\n    };\n\n    var onError = function (msg) {\n      console.log(\"Sharing failed with message: \" + msg);\n    };\n    window.plugins.socialsharing.shareWithOptions(options, onSuccess, onError);\n  };\n\n  const albumUrl =\n    props.image.split(\"/\")[0] === \"uploads\"\n      ? \"https://dry-temple-37388.herokuapp.com/\" + props.image\n      : props.image;\n\n  return (\n    <div\n      className={classes.CardContainer}\n      onClick={() => {\n        props.onclick();\n      }}\n    >\n      <div className={classes.ImageContainer}>\n        <img className={classes.Image} src={albumUrl} alt=\"Song\" />\n      </div>\n      <div className={classes.Content}>\n        <h1 className={classes.Title}>{props.title}</h1>\n        <h2 className={classes.Artist}>{props.artist}</h2>\n        <h3 className={classes.Info}>\n          {props.genre} | {props.year}\n        </h3>\n        <div className={classes.Share}>\n          <Button\n            onclick={(e) => {\n              e.stopPropagation();\n              share(props.title);\n            }}\n            text=\"Share\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MusicCard;\n","const actionStatus = {\n  NOT_RUNNING: \"not running\",\n  RUNNING: \"running\",\n  SUCCESS: \"success\",\n  ERROR: \"error\",\n};\n\nexport default actionStatus;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../store/actions/index.actions\";\nimport MusicCard from \"../../components/musicCard/musicCard.component\";\nimport classes from \"./musicOverview.module.css\";\nimport actionStatus from \"../../store/actionStatus\";\n\nconst MusicOverview = (props) => {\n  const dispatch = useDispatch();\n  const music = useSelector((state) => state.music);\n  const onFetchMusic = () => dispatch(actions.fetchMusic());\n  const musicStatus = useSelector((state) => state.musicStatus);\n\n  useEffect(() => {\n    if (!music) {\n      onFetchMusic();\n    }\n  });\n\n  const songs = () => {\n    let songs = [];\n    let songKeys = Object.keys(music);\n    songKeys.forEach((key) => {\n      songs.push(music[key]);\n    });\n    return songs;\n  };\n\n  let content;\n  if (music) {\n    content = songs().map((song) => {\n      return (\n        <MusicCard\n          key={song.id}\n          image={song.image}\n          title={song.title}\n          artist={song.artist}\n          genre={song.genre}\n          year={song.year}\n          className={classes.Card}\n          onclick={() => {\n            props.history.push(\"/detail/\" + song.id);\n          }}\n        />\n      );\n    });\n  } else {\n    content = \"loading\";\n  }\n  return <div className={classes.OverviewContainer}>{content}</div>;\n};\n\nexport default MusicOverview;\n","/*\n * action types\n */\n\nexport const FETCH_MUSIC = \"FETCH_MUSIC\";\nexport const FETCH_MUSIC_START = \"FETCH_MUSIC_START\";\nexport const FETCH_MUSIC_SUCCESS = \"FETCH_MUSIC_SUCCESS\";\nexport const FETCH_MUSIC_FAIL = \"FETCH_MUSIC_FAIL\";\nexport const FETCH_MUSIC_DETAILS = \"FETCH_MUSIC_DETAILS\";\nexport const ADD_SONG = \"ADD_SONG\";\nexport const ADD_SONG_START = \"ADD_SONG_START\";\nexport const ADD_SONG_SUCCESS = \"ADD_SONG_SUCCESS\";\nexport const ADD_SONG_FAIL = \"ADD_SONG_FAIL\";\nexport const DELETE_SONG = \"DELETE_SONG\";\nexport const DELETE_SONG_START = \"DELETE_SONG_START\";\nexport const DELETE_SONG_SUCCESS = \"DELETE_SONG_SUCCESS\";\nexport const DELETE_SONG_FAIL = \"DELETE_SONG_FAIL\";\n\n/*\n * action creators\n */\n\nexport function fetchMusic() {\n  return { type: FETCH_MUSIC };\n}\nexport function fetchSongsStart() {\n  return { type: FETCH_MUSIC_START };\n}\nexport function fetchSongsSuccess(music) {\n  return { type: FETCH_MUSIC_SUCCESS, music };\n}\nexport function fetchSongsFail(error) {\n  return { type: FETCH_MUSIC_FAIL, error };\n}\n\nexport function fetchMusicDetails(musicId) {\n  return { type: FETCH_MUSIC_DETAILS, musicId };\n}\n\nexport function addSong(song) {\n  return { type: ADD_SONG, song };\n}\nexport function addSongStart() {\n  return { type: ADD_SONG_START };\n}\nexport function addSongSuccess(song) {\n  return { type: ADD_SONG_SUCCESS, song };\n}\nexport function addSongFail(error) {\n  return { type: ADD_SONG_FAIL, error };\n}\n\nexport function deleteSong(songId) {\n  return { type: DELETE_SONG, songId };\n}\nexport function deleteSongStart() {\n  return { type: DELETE_SONG_START };\n}\nexport function deleteSongSuccess(songId) {\n  return { type: DELETE_SONG_SUCCESS, songId };\n}\nexport function deleteSongFail(error) {\n  return { type: DELETE_SONG_FAIL, error };\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../store/actions/index.actions\";\nimport classes from \"./musicDetail.module.css\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"../../components/button/button.component\";\n\nconst MusicDetail = (props) => {\n  const dispatch = useDispatch();\n  const music = useSelector((state) => state.music);\n  const { id } = useParams();\n  const song = useSelector((state) => (state.music ? state.music[id] : null));\n  const onFetchMusic = () => dispatch(actions.fetchMusic());\n  const deleteSongAction = (songId) => dispatch(actions.deleteSong(songId));\n\n  useEffect(() => {\n    if (!music) {\n      onFetchMusic();\n    }\n  });\n\n  const deleteSong = () => {\n    if (window.confirm(\"Are you sure you want to delete this song?\")) {\n      deleteSongAction(song.id);\n      props.history.push(\"/\");\n    }\n  };\n\n  const shareSong = (title) => {\n    // this is the complete list of currently supported params you can pass to the plugin (all optional)\n    var options = {\n      message: `Check out this song: ${title}!`, // not supported on some apps (Facebook, Instagram)\n      subject: title, // fi. for email\n    };\n\n    var onSuccess = function (result) {\n      console.log(\"Share completed? \" + result.completed); // On Android apps mostly return false even while it's true\n      console.log(\"Shared to app: \" + result.app); // On Android result.app is currently empty. On iOS it's empty when sharing is cancelled (result.completed=false)\n    };\n\n    var onError = function (msg) {\n      console.log(\"Sharing failed with message: \" + msg);\n    };\n    window.plugins.socialsharing.shareWithOptions(options, onSuccess, onError);\n  };\n\n  let content;\n  if (music) {\n    if (!song) {\n      props.history.push(\"/\");\n    } else {\n      const albumUrl =\n        song.image.split(\"/\")[0] === \"uploads\"\n          ? \"https://dry-temple-37388.herokuapp.com/\" + song.image\n          : song.image;\n\n      content = (\n        <div className={classes.DetailContainer}>\n          <div className={classes.ImageContainer}>\n            <img className={classes.Image} src={albumUrl} alt=\"album cover\" />\n          </div>\n          <div className={classes.Content}>\n            <div className={classes.Title}>{song.title}</div>\n            <div className={classes.Artist}>{song.artist}</div>\n            <div className={classes.Info}>\n              {song.genre} | {song.year}\n            </div>\n          </div>\n          <div className={classes.Actions}>\n            <Button onclick={deleteSong} text=\"delete\" />\n            <Button onclick={() => shareSong(song.title)} text=\"share\" />\n          </div>\n        </div>\n      );\n    }\n  } else {\n    content = <div>loading</div>;\n  }\n\n  return <div className={classes.OverviewContainer}>{content}</div>;\n};\n\nexport default MusicDetail;\n","import React, { useState } from \"react\";\nimport Button from \"../../components/button/button.component\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../store/actions/index.actions\";\n\nimport classes from \"./musicAdd.module.css\";\n\nconst MusicAdd = (props) => {\n  const dispatch = useDispatch();\n  const addSongAction = (formData) => dispatch(actions.addSong(formData));\n\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [year, setYear] = useState(2020);\n  const [imageUrl, setImageUrl] = useState(\n    \"https://via.placeholder.com/1000x1000?text=Placeholder\"\n  );\n  const [image, setImage] = useState();\n\n  const formSubmitHandler = () => {\n    let formData = new FormData();\n    formData.set(\"title\", title);\n    formData.set(\"artist\", artist);\n    formData.set(\"genre\", genre);\n    formData.set(\"year\", year);\n    formData.append(\"album\", image);\n    addSongAction(formData);\n    props.history.push(\"/\");\n  };\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    setImage(event.target.files[0]);\n    setImageUrl(URL.createObjectURL(event.target.files[0]));\n  };\n\n  return (\n    <div className={classes.Container}>\n      <form className={classes.Form} onSubmit={formSubmitHandler}>\n        <div className={classes.ImageContainer}>\n          <img className={classes.Image} src={imageUrl} alt=\"album cover\" />\n        </div>\n        <div className={classes[\"upload-btn-wrapper\"]}>\n          <Button type=\"button\" text=\"Upload Image\" />\n          <input type=\"file\" name=\"album\" onChange={handleChange} />\n        </div>\n\n        <label className={classes.Label} htmlFor=\"title\">\n          Title\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            className={classes.Input}\n          />\n        </label>\n\n        <label className={classes.Label} htmlFor=\"artist\">\n          Artist\n          <input\n            type=\"text\"\n            name=\"artist\"\n            placeholder=\"Artist\"\n            value={artist}\n            onChange={(e) => setArtist(e.target.value)}\n            className={classes.Input}\n          />\n        </label>\n\n        <label className={classes.Label} htmlFor=\"genre\">\n          Genre\n          <input\n            type=\"text\"\n            name=\"genre\"\n            placeholder=\"Genre\"\n            value={genre}\n            onChange={(e) => setGenre(e.target.value)}\n            className={classes.Input}\n          />\n        </label>\n\n        <label className={classes.Label} htmlFor=\"year\">\n          Year\n          <input\n            type=\"number\"\n            name=\"year\"\n            placeholder=\"Year\"\n            value={year}\n            onChange={(e) => setYear(e.target.value)}\n            className={classes.Input}\n          />\n        </label>\n\n        <div className={classes.Submit}>\n          <Button type=\"submit\" text=\"Submit\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default MusicAdd;\n","import React, { useEffect } from \"react\";\nimport classes from \"./bottomNav.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nconst BottomNav = (props) => {\n  let redirect;\n\n  useEffect(() => {\n    props.history.push(\"/\");\n  }, [props.history]);\n\n  const navigate = (url) => {\n    props.history.push(url);\n  };\n\n  return (\n    <div className={classes.bottomNav}>\n      {redirect}\n      <div className={classes.navItem} onClick={() => navigate(\"/\")}>\n        <FontAwesomeIcon size=\"2x\" icon={faMusic} color=\"#ff2956\" />\n        music\n      </div>\n      <div className={classes.navItem} onClick={() => navigate(\"/add\")}>\n        <FontAwesomeIcon size=\"2x\" icon={faPlus} color=\"#ff2956\" />\n        add\n      </div>\n    </div>\n  );\n};\n\nexport default BottomNav;\n","import React from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport Overview from \"./containers/musicOverview/musicOverview.container\";\nimport Detail from \"./containers/musicDetail/musicDetail.container\";\nimport Add from \"./containers/musicAdd/musicAdd.container\";\nimport BottomNav from \"./components/bottomNav/bottomNav.component\";\n\nimport \"./App.css\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/detail/:id\" component={Detail} />\n        <Route path=\"/add\" component={Add} />\n        <Route path=\"/\" exact component={Overview} />\n      </Switch>\n      <BottomNav history={props.history} />\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://dry-temple-37388.herokuapp.com/api/v1\",\n});\n\nexport default instance;\n","import axios from \"../../axios-custom\";\nimport { put } from \"redux-saga/effects\";\nimport * as actions from \"../actions/index.actions\";\n\nexport function* fetchMusicSaga(action) {\n  yield put(actions.fetchSongsStart());\n  try {\n    const response = yield axios.get(\"/songs/\");\n    yield put(actions.fetchSongsSuccess(response.data));\n  } catch (error) {\n    yield put(actions.fetchSongsFail(error));\n  }\n}\n\nexport function* addSongSaga(action) {\n  yield put(actions.addSongStart());\n  try {\n    const response = yield axios.post(\"/songs/\", action.song, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    });\n    yield put(actions.addSongSuccess(response.data));\n  } catch (error) {\n    yield put(actions.addSongFail(error));\n  }\n}\n\nexport function* deleteSongSaga(action) {\n  yield put(actions.deleteSongStart());\n  try {\n    yield axios.delete(\"/songs/\" + action.songId);\n    yield put(actions.deleteSongSuccess(action.songId));\n  } catch (error) {\n    yield put(actions.deleteSongFail(error));\n  }\n}\n","import { takeEvery, all } from \"redux-saga/effects\";\nimport { FETCH_MUSIC, ADD_SONG, DELETE_SONG } from \"../actions/music.actions\";\nimport { fetchMusicSaga, addSongSaga, deleteSongSaga } from \"./music.saga\";\n\nexport function* watchMusic() {\n  yield all([\n    takeEvery(FETCH_MUSIC, fetchMusicSaga),\n    takeEvery(ADD_SONG, addSongSaga),\n    takeEvery(DELETE_SONG, deleteSongSaga),\n  ]);\n}\n","import {\n  FETCH_MUSIC_START,\n  FETCH_MUSIC_SUCCESS,\n  FETCH_MUSIC_FAIL,\n  ADD_SONG_START,\n  ADD_SONG_FAIL,\n  ADD_SONG_SUCCESS,\n  DELETE_SONG_START,\n  DELETE_SONG_SUCCESS,\n  DELETE_SONG_FAIL,\n} from \"../actions/music.actions\";\nimport actionStatus from \"../actionStatus\";\n\nconst initialState = {\n  musicStatus: actionStatus.NOT_RUNNING,\n  musicAddStatus: actionStatus.NOT_RUNNING,\n  musicDeleteStatus: actionStatus.NOT_RUNNING,\n  music: null,\n  musicError: \"\",\n  songAddError: \"\",\n  songDeleteError: \"\",\n};\n\nconst updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  };\n};\n\nconst addMusicStart = (state, action) => {\n  return updateObject(state, {\n    musicStatus: actionStatus.RUNNING,\n  });\n};\nconst addMusicSuccess = (state, action) => {\n  let music;\n  action.music.forEach((song) => {\n    music = {\n      ...music,\n      [song.id]: song,\n    };\n  });\n  return updateObject(state, {\n    musicStatus: actionStatus.SUCCESS,\n    music,\n  });\n};\nconst addMusicFail = (state, action) => {\n  return updateObject(state, {\n    musicStatus: actionStatus.ERROR,\n    musicError: action.error,\n  });\n};\n\nconst addSongStart = (state, action) => {\n  return updateObject(state, {\n    musicAddStatus: actionStatus.RUNNING,\n  });\n};\nconst addSongSuccess = (state, action) => {\n  let song = action.song;\n  let music = {\n    ...state.music,\n    [song.id]: song,\n  };\n  return updateObject(state, {\n    musicAddStatus: actionStatus.SUCCESS,\n    music,\n  });\n};\nconst addSongFail = (state, action) => {\n  return updateObject(state, {\n    musicAddStatus: actionStatus.ERROR,\n    musicAddError: action.error,\n  });\n};\n\nconst deleteSongStart = (state, action) => {\n  return updateObject(state, {\n    musicDeleteStatus: actionStatus.RUNNING,\n  });\n};\nconst deleteSongSuccess = (state, action) => {\n  let music = {\n    ...state.music,\n  };\n  delete music[action.songId];\n  return updateObject(state, {\n    musicDeleteStatus: actionStatus.SUCCESS,\n    music,\n  });\n};\nconst deleteSongFail = (state, action) => {\n  return updateObject(state, {\n    musicDeleteStatus: actionStatus.ERROR,\n    musicDeleteError: action.error,\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MUSIC_START:\n      return addMusicStart(state, action);\n    case FETCH_MUSIC_SUCCESS:\n      return addMusicSuccess(state, action);\n    case FETCH_MUSIC_FAIL:\n      return addMusicFail(state, action);\n    case ADD_SONG_START:\n      return addSongStart(state, action);\n    case ADD_SONG_SUCCESS:\n      return addSongSuccess(state, action);\n    case ADD_SONG_FAIL:\n      return addSongFail(state, action);\n    case DELETE_SONG_START:\n      return deleteSongStart(state, action);\n    case DELETE_SONG_SUCCESS:\n      return deleteSongSuccess(state, action);\n    case DELETE_SONG_FAIL:\n      return deleteSongFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { watchMusic } from \"./store/sagas/index.saga\";\nimport musicReducer from \"./store/reducers/music.reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  musicReducer,\n  compose(applyMiddleware(thunkMiddleware, sagaMiddleware))\n);\n\nsagaMiddleware.run(watchMusic);\n\nconst renderReactDom = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\n\nif (window.cordova) {\n  document.addEventListener(\n    \"deviceready\",\n    () => {\n      renderReactDom();\n    },\n    false\n  );\n} else {\n  renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}